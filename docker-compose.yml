version: '3.8'

services:
  mongo:
    image: mongo:6
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root1234
    restart: unless-stopped
    volumes:
      - ./data/mongo:/data/db
    networks:
      - social-media-network
  redis:
    image: redis:7
    container_name: redis
    command: ["redis-server", "--requirepass", "admin1234"]  # Secure Redis with a password
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    networks:
      - social-media-network
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5673:5672"     # AMQP
      - "15673:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin1234
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    networks:
      - social-media-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 5s
      retries: 5
      start_period: 10s
      timeout: 10s
  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - identity-service
      - post-service
      - media-service
      - search-service
    networks:
      - social-media-network
    env_file:
      - ./api-gateway/.env

  identity-service:
    build: ./identity-service
    ports:
      - "3001:3001"
    depends_on:
      - mongo
      - redis
      - rabbitmq
    networks:
      - social-media-network
    env_file:
      - ./identity-service/.env

  post-service:
    build: ./post-service
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - social-media-network
    env_file:
      - ./post-service/.env

  media-service:
    build: ./media-service
    ports:
      - "3003:3003"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
      redis:
        condition: service_started

    networks:
      - social-media-network
    env_file:
      - ./media-service/.env

  search-service:
    build: ./search-service
    ports:
      - "3004:3004"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - social-media-network
    env_file:
      - ./search-service/.env

networks:
  social-media-network:
    driver: bridge
    external: true
volumes:
  mongo-data:
  redis-data:
  rabbitmq_data:
